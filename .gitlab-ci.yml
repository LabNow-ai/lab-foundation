image: docker:latest

services:
- name: docker:edge-dind
  command: ["--experimental"]

variables:
  REGISTRY_URL: "docker.io"  # other registry URL, DOCKER_REGISTRY_PASSWORD and DOCKER_REGISTRY_USER to be set in CI env.
  DOCKER_DRIVER: overlay2

before_script:
  - CI_PROJECT_NAME="qpod"
  - REPOSITORY=$(echo "${REGISTRY_URL}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}" | awk '{print tolower($0)}')
  - apk add --no-cache curl && echo IP=$(curl -s http://ifconfig.me/ip)
  - docker info && rm -rf ./.git
  - echo "$DOCKER_REGISTRY_PASSWORD" | docker login "${REGISTRY_URL}" -u "$DOCKER_REGISTRY_USER" --password-stdin
  - push_image()  { docker image prune --force && docker push "${REPOSITORY}"; }
  - build_image() { TAG=$1; FILE=$2; shift 2; docker build --force-rm=true -t "${REPOSITORY}:$TAG" -f "$FILE" "$@" "$(dirname $FILE)"; push_image; }
  - alias_image() { docker tag "${REPOSITORY}:$1" "${REPOSITORY}:$2"; push_image; }


stages:
  - base
  - cuda
  - jpy
  - qpod


base:
  stage: base
  script:
  - build_image "${CI_JOB_NAME}" "docker_base/Dockerfile"
    --squash


base-cuda_9.0:
  stage: cuda
  script:
  - build_image "${CI_JOB_NAME}" "docker_base/Dockerfile-cuda9.0"
    --build-arg "repository=${REPOSITORY}"
    --squash
  - alias_image "${CI_JOB_NAME}" "cuda"
base-cuda_10.0:
  stage: cuda
  script:
  - build_image "${CI_JOB_NAME}" "docker_base/Dockerfile-cuda10.0"
    --build-arg "repository=${REPOSITORY}"
    --squash

jupyter-mini:
  stage: jpy
  script:
  - build_image "${CI_JOB_NAME}" "docker_jpy/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "ARG_EXTEND_JUPYTER=false"
    --build-arg "ARG_NODEJS=false"
    --build-arg "ARG_LATEX_BASE=false"
    --build-arg "ARG_LATEX_CJK=false"

jupyter-mini-cuda:
  stage: jpy
  script:
  - build_image "${CI_JOB_NAME}" "docker_jpy/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=cuda"
    --build-arg "ARG_EXTEND_JUPYTER=false"
    --build-arg "ARG_NODEJS=false"
    --build-arg "ARG_LATEX_BASE=false"
    --build-arg "ARG_LATEX_CJK=false"

jupyter-std:
  stage: jpy
  script:
  - build_image "${CI_JOB_NAME}" "docker_jpy/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "ARG_EXTEND_JUPYTER=true"
    --build-arg "ARG_NODEJS=true"
    --build-arg "ARG_LATEX_BASE=false"
    --build-arg "ARG_LATEX_CJK=false"

jupyter-full:
  stage: jpy
  script:
  - build_image "${CI_JOB_NAME}" "docker_jpy/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "ARG_EXTEND_JUPYTER=true"
    --build-arg "ARG_NODEJS=true"
    --build-arg "ARG_LATEX_BASE=true"
    --build-arg "ARG_LATEX_CJK=true"

jupyter-full-cuda:
  stage: jpy
  script:
  - build_image "${CI_JOB_NAME}" "docker_jpy/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=cuda"
    --build-arg "ARG_EXTEND_JUPYTER=true"
    --build-arg "ARG_NODEJS=true"
    --build-arg "ARG_LATEX_BASE=true"
    --build-arg "ARG_LATEX_CJK=true"


r-mini:
  stage: qpod
  script:
  - build_image "${CI_JOB_NAME}" "docker_template/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=jupyter-mini"
    --build-arg "ARG_R=true"

r-std:
  stage: qpod
  script:
  - build_image "${CI_JOB_NAME}" "docker_template/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=jupyter-std"
    --build-arg "ARG_JDK=true"
    --build-arg "ARG_R=true"
    --build-arg "ARG_R_DATASCIENCE=true"

r-latex:
  stage: qpod
  script:
  - build_image "${CI_JOB_NAME}" "docker_template/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=jupyter-full"
    --build-arg "ARG_JDK=true"
    --build-arg "ARG_R=true"
    --build-arg "ARG_R_DATASCIENCE=true"
    --build-arg "ARG_LATEX_BASE=true"

r-studio:
  stage: qpod
  script:
  - build_image "${CI_JOB_NAME}" "docker_template/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=jupyter-full"
    --build-arg "ARG_JDK=true"
    --build-arg "ARG_R=true"
    --build-arg "ARG_R_DATASCIENCE=true"
    --build-arg "ARG_R_STUDIO=true"
    --build-arg "ARG_LATEX_BASE=true"
    --build-arg "ARG_LATEX_CJK=true"


py-std:
  stage: qpod
  script:
  - build_image "${CI_JOB_NAME}" "docker_template/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=jupyter-std"
    --build-arg "ARG_MKL=true"
    --build-arg "ARG_PY_DATABASE=true"
    --build-arg "ARG_PY_DATASCIENCE=true"
    --build-arg "ARG_PY_NLP=true"
    --build-arg "ARG_PY_CV=true"
    --build-arg "ARG_PY_BIOINFO=true"

py-jdk:
  stage: qpod
  script:
  - build_image "${CI_JOB_NAME}" "docker_template/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=jupyter-std"
    --build-arg "ARG_JDK=true"
    --build-arg "ARG_MKL=true"
    --build-arg "ARG_PY_DATABASE=true"
    --build-arg "ARG_PY_DATASCIENCE=true"
    --build-arg "ARG_PY_NLP=true"
    --build-arg "ARG_PY_CV=true"
    --build-arg "ARG_PY_BIOINFO=true"

py-cuda:
  stage: qpod
  script:
  - build_image "${CI_JOB_NAME}" "docker_template/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=jupyter-full-cuda"
    --build-arg "ARG_MKL=true"
    --build-arg "ARG_PY_DATABASE=true"
    --build-arg "ARG_PY_DATASCIENCE=true"
    --build-arg "ARG_PY_NLP=true"
    --build-arg "ARG_PY_CV=true"
    --build-arg "ARG_PY_BIOINFO=true"


go:
  stage: qpod
  script:
  - build_image "${CI_JOB_NAME}" "docker_template/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=jupyter-std"
    --build-arg "ARG_GO=true"

julia:
  stage: qpod
  script:
  - build_image "${CI_JOB_NAME}" "docker_template/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=jupyter-std"
    --build-arg "ARG_JULIA=true"


full:
  stage: qpod
  script:
  - build_image "${CI_JOB_NAME}" "docker_template/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=jupyter-full"
    --build-arg "ARG_JDK=true"
    --build-arg "ARG_MKL=true"
    --build-arg "ARG_PY_DATABASE=true"
    --build-arg "ARG_PY_DATASCIENCE=true"
    --build-arg "ARG_PY_NLP=true"
    --build-arg "ARG_PY_CV=true"
    --build-arg "ARG_PY_BIOINFO=true"
    --build-arg "ARG_R=true"
    --build-arg "ARG_R_DATASCIENCE=true"
    --build-arg "ARG_R_STUDIO=true"
    --build-arg "ARG_GO=true"
    --build-arg "ARG_JULIA=true"
  - alias_image "${CI_JOB_NAME}" "latest"

full-cuda:
  stage: qpod
  script:
  - build_image "${CI_JOB_NAME}" "docker_template/Dockerfile"
    --build-arg "repository=${REPOSITORY}"
    --build-arg "base=jupyter-full-cuda"
    --build-arg "ARG_JDK=true"
    --build-arg "ARG_MKL=true"
    --build-arg "ARG_PY_DATABASE=true"
    --build-arg "ARG_PY_DATASCIENCE=true"
    --build-arg "ARG_PY_NLP=true"
    --build-arg "ARG_PY_CV=true"
    --build-arg "ARG_PY_BIOINFO=true"
    --build-arg "ARG_R=true"
    --build-arg "ARG_R_DATASCIENCE=true"
    --build-arg "ARG_R_STUDIO=true"
    --build-arg "ARG_GO=true"
    --build-arg "ARG_JULIA=true"
  - alias_image "${CI_JOB_NAME}" "latest-cuda"
