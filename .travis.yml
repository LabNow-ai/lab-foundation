language: minimal

dist: bionic

env:
  global:
    - REGISTRY_URL: "quay.io"  # docker.io or other registry URL, DOCKER_REGISTRY_PASSWORD and DOCKER_REGISTRY_USER to be set in CI env.
    - CI_PROJECT_NAME: "qpod"

install:
  - echo '{"experimental":true}' | sudo tee /etc/docker/daemon.json && sudo service docker restart

before_script:
  - echo IP=$(curl -s http://ifconfig.me/ip)
  - docker info
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
      echo "$DOCKER_REGISTRY_PASSWORD" | docker login "${REGISTRY_URL}" -u "$DOCKER_REGISTRY_USER" --password-stdin ;
    fi
  - CI_PROJECT_NAMESPACE=$([[ "$TRAVIS_PULL_REQUEST_SLUG" = "" ]] && echo "$(dirname ${TRAVIS_REPO_SLUG})" || echo "$(dirname ${TRAVIS_PULL_REQUEST_SLUG})")
  - export REPOSITORY=$(echo "${REGISTRY_URL}/${CI_PROJECT_NAMESPACE}/${CI_PROJECT_NAME}" | awk '{print tolower($0)}')
  - build_image_squash() { TAG=$1; FILE=$2; shift 2; docker build --squash --force-rm=true -t "${REPOSITORY}:$TAG" -f "$FILE" "$@" "$(dirname $FILE)"; }
  - build_image() { TAG=$1; FILE=$2; shift 2; docker build --force-rm=true -t "${REPOSITORY}:$TAG" -f "$FILE" "$@" "$(dirname $FILE)"; }
  - alias_image() { docker tag "${REPOSITORY}:$1" "${REPOSITORY}:$2"; }

after_script:
  - docker image prune --force && docker images
  - if [ "$TRAVIS_PULL_REQUEST" = "false" ]; then
      docker push "${REPOSITORY}" && echo "Image pushed> ${REPOSITORY}";
    fi

stages:
  - base
  - cuda
  - jpy
  - qpod

jobs:
  include:
    - name: "base"
      stage: base
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_base/Dockerfile"


    - name: "base-cuda_10.1"
      stage: cuda
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_base/Dockerfile-cuda10.1"
          --build-arg "repository=${REPOSITORY}"

    - name: "base-cuda_10.0"
      stage: cuda
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_base/Dockerfile-cuda10.0"
          --build-arg "repository=${REPOSITORY}"
        - alias_image "${TRAVIS_JOB_NAME}" "cuda"

    - name: "jupyter-mini"
      stage: jpy
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_jpy/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "ARG_EXTEND_JUPYTER=false"
          --build-arg "ARG_NODEJS=false"
          --build-arg "ARG_LATEX_BASE=false"
          --build-arg "ARG_LATEX_CJK=false"

    - name: "jupyter-mini-cuda"
      stage: jpy
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_jpy/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=cuda"
          --build-arg "ARG_EXTEND_JUPYTER=false"
          --build-arg "ARG_NODEJS=false"
          --build-arg "ARG_LATEX_BASE=false"
          --build-arg "ARG_LATEX_CJK=false"

    - name: "jupyter-std"
      stage: jpy
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_jpy/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "ARG_EXTEND_JUPYTER=true"
          --build-arg "ARG_NODEJS=true"
          --build-arg "ARG_LATEX_BASE=false"
          --build-arg "ARG_LATEX_CJK=false"

    - name: "jupyter-full"
      stage: jpy
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_jpy/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "ARG_EXTEND_JUPYTER=true"
          --build-arg "ARG_NODEJS=true"
          --build-arg "ARG_LATEX_BASE=true"
          --build-arg "ARG_LATEX_CJK=true"

    - name: "jupyter-full-cuda"
      stage: jpy
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_jpy/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=cuda"
          --build-arg "ARG_EXTEND_JUPYTER=true"
          --build-arg "ARG_NODEJS=true"
          --build-arg "ARG_LATEX_BASE=true"
          --build-arg "ARG_LATEX_CJK=true"

    - name: "r-mini"
      stage: qpod
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_template/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=jupyter-mini"
          --build-arg "ARG_R=true"

    - name: "r-std"
      stage: qpod
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_template/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=jupyter-std"
          --build-arg "ARG_JDK=true"
          --build-arg "ARG_R=true"
          --build-arg "ARG_R_DATASCIENCE=true"

    - name: "r-latex"
      stage: qpod
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_template/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=jupyter-full"
          --build-arg "ARG_JDK=true"
          --build-arg "ARG_R=true"
          --build-arg "ARG_R_DATASCIENCE=true"
          --build-arg "ARG_LATEX_BASE=true"

    - name: "r-studio"
      stage: qpod
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_template/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=jupyter-full"
          --build-arg "ARG_JDK=true"
          --build-arg "ARG_R=true"
          --build-arg "ARG_R_DATASCIENCE=true"
          --build-arg "ARG_R_STUDIO=true"
          --build-arg "ARG_LATEX_BASE=true"
          --build-arg "ARG_LATEX_CJK=true"

    - name: "py-std"
      stage: qpod
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_template/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=jupyter-std"
          --build-arg "ARG_MKL=true"
          --build-arg "ARG_PY_DATABASE=true"
          --build-arg "ARG_PY_DATASCIENCE=true"
          --build-arg "ARG_PY_NLP=true"
          --build-arg "ARG_PY_CV=true"
          --build-arg "ARG_PY_BIOINFO=true"

    - name: "py-jdk"
      stage: qpod
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_template/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=jupyter-std"
          --build-arg "ARG_JDK=true"
          --build-arg "ARG_MKL=true"
          --build-arg "ARG_PY_DATABASE=true"
          --build-arg "ARG_PY_DATASCIENCE=true"
          --build-arg "ARG_PY_NLP=true"
          --build-arg "ARG_PY_CV=true"
          --build-arg "ARG_PY_BIOINFO=true"

    - name: "py-cuda"
      stage: qpod
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_template/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=jupyter-full-cuda"
          --build-arg "ARG_MKL=true"
          --build-arg "ARG_PY_DATABASE=true"
          --build-arg "ARG_PY_DATASCIENCE=true"
          --build-arg "ARG_PY_NLP=true"
          --build-arg "ARG_PY_CV=true"
          --build-arg "ARG_PY_BIOINFO=true"

    - name: "go"
      stage: qpod
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_template/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=jupyter-std"
          --build-arg "ARG_GO=true"

    - name: "julia"
      stage: qpod
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_template/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=jupyter-std"
          --build-arg "ARG_JULIA=true"

    - name: "octave"
      stage: qpod
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_template/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=jupyter-full"
          --build-arg "ARG_OCTAVE=true"

    - name: "full"
      stage: qpod
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_template/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=jupyter-full"
          --build-arg "ARG_JDK=true"
          --build-arg "ARG_MKL=true"
          --build-arg "ARG_PY_DATABASE=true"
          --build-arg "ARG_PY_DATASCIENCE=true"
          --build-arg "ARG_PY_NLP=true"
          --build-arg "ARG_PY_CV=true"
          --build-arg "ARG_PY_BIOINFO=true"
          --build-arg "ARG_R=true"
          --build-arg "ARG_R_DATASCIENCE=true"
          --build-arg "ARG_R_STUDIO=true"
          --build-arg "ARG_GO=true"
          --build-arg "ARG_JULIA=true"
          --build-arg "ARG_OCTAVE=true"
        - alias_image "${TRAVIS_JOB_NAME}" "latest"

    - name: "full-cuda"
      stage: qpod
      script:
        - build_image_squash "${TRAVIS_JOB_NAME}" "docker_template/Dockerfile"
          --build-arg "repository=${REPOSITORY}"
          --build-arg "base=jupyter-full-cuda"
          --build-arg "ARG_JDK=true"
          --build-arg "ARG_MKL=true"
          --build-arg "ARG_PY_DATABASE=true"
          --build-arg "ARG_PY_DATASCIENCE=true"
          --build-arg "ARG_PY_NLP=true"
          --build-arg "ARG_PY_CV=true"
          --build-arg "ARG_PY_BIOINFO=true"
          --build-arg "ARG_R=true"
          --build-arg "ARG_R_DATASCIENCE=true"
          --build-arg "ARG_R_STUDIO=true"
          --build-arg "ARG_GO=true"
          --build-arg "ARG_JULIA=true"
          --build-arg "ARG_OCTAVE=true"
        - alias_image "${TRAVIS_JOB_NAME}" "latest-cuda"


notifications:
  slack: q-pod:lrzKf5Ff1Ao1MGclzElR23j4
